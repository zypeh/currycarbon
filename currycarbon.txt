-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A package for simple, fast radiocarbon calibration
--   
--   Radiocarbon calibration with the intercept method optimised for fast
--   calibration of many dates.
@package currycarbon
@version 0.7.0

module Currycarbon.CalCurves.Intcal20
intcal20 :: String

module Currycarbon.Types
data UncalC14
UncalC14 :: String -> Int -> Int -> UncalC14
data UncalPDF
UncalPDF :: String -> [(Int, Float)] -> UncalPDF
data CalPDF
CalPDF :: String -> [(Int, Float)] -> CalPDF
data CalC14
CalC14 :: String -> [HDR] -> [HDR] -> CalC14
data HDR
HDR :: Int -> Int -> HDR
data CalCurveMatrix
CalCurveMatrix :: [Int] -> [Int] -> [[Float]] -> CalCurveMatrix
newtype CalCurve
CalCurve :: [(Int, Int, Int)] -> CalCurve
getBPsCal :: CalPDF -> [Int]
getProbsCal :: CalPDF -> [Float]
getNameCal :: CalPDF -> String
getBPsUncal :: UncalPDF -> [Int]
getProbsUncal :: UncalPDF -> [Float]
getNameUncal :: UncalPDF -> String
getBPs :: CalCurve -> [Int]
getCals :: CalCurve -> [Int]
getCalSigmas :: CalCurve -> [Int]
instance GHC.Show.Show Currycarbon.Types.UncalC14
instance GHC.Show.Show Currycarbon.Types.UncalPDF
instance GHC.Show.Show Currycarbon.Types.CalPDF
instance GHC.Show.Show Currycarbon.Types.HDR
instance GHC.Show.Show Currycarbon.Types.CalC14
instance GHC.Show.Show Currycarbon.Types.CalCurveMatrix
instance GHC.Show.Show Currycarbon.Types.CalCurve

module Currycarbon.Parsers
writeCalC14 :: FilePath -> [CalC14] -> IO ()
renderCalC14s :: [CalC14] -> String
renderCalC14 :: CalC14 -> String
renderHDRs :: [HDR] -> String
renderHDR :: HDR -> String
writeCalCurveMatrixFile :: FilePath -> CalCurveMatrix -> IO ()
renderCalCurveMatrixFile :: CalCurveMatrix -> String
writeCalPDFs :: FilePath -> [CalPDF] -> IO ()
renderCalPDF :: CalPDF -> String
readUncalC14FromFile :: FilePath -> IO [UncalC14]
readUncalC14String :: String -> Either String [UncalC14]
parseOneUncalC14 :: Parser UncalC14
writeCalCurveFile :: FilePath -> CalCurve -> IO ()
renderCalCurve :: CalCurve -> String
loadCalCurve :: String -> CalCurve
calCurveFileParser :: Parser [(Int, Int, Int)]
calCurveLineParser :: Parser (Int, Int, Int)
comments :: Parser String

module Currycarbon.Calibration
refineCal :: [CalPDF] -> [CalC14]
refineCalOne :: CalPDF -> CalC14
calibrateMany :: CalCurve -> [UncalC14] -> [CalPDF]
calibrate :: CalCurve -> UncalC14 -> CalPDF
prepareCalCurve :: CalCurve -> UncalPDF -> (CalCurve, CalCurveMatrix)
normalizeCalPDF :: CalPDF -> CalPDF
uncalToPDF :: UncalC14 -> UncalPDF
dnormInt :: Int -> Int -> Int -> Float
getRelevantCalCurveSegment :: UncalPDF -> CalCurve -> CalCurve
interpolateCalCurve :: CalCurve -> CalCurve
timeWindows :: [(a, b, c)] -> [((a, b, c), (a, b, c))]
splitWhen :: (a -> Bool) -> [a] -> ([a], [a])
makeBCADCalCurve :: CalCurve -> CalCurve
makeCalCurveMatrix :: CalCurve -> CalCurveMatrix
projectUncalOverCalCurve :: UncalPDF -> CalCurveMatrix -> CalPDF

module Currycarbon.CLI.CLICalibrate
data CalibrateOptions
CalibrateOptions :: [UncalC14] -> [FilePath] -> Bool -> Maybe FilePath -> Maybe FilePath -> Maybe FilePath -> Maybe FilePath -> CalibrateOptions
[_calibrateUncalC14] :: CalibrateOptions -> [UncalC14]
[_calibrateUncalC14File] :: CalibrateOptions -> [FilePath]
[_calibrateQuickOut] :: CalibrateOptions -> Bool
[_calibrateDensityFile] :: CalibrateOptions -> Maybe FilePath
[_calibrateHDRFile] :: CalibrateOptions -> Maybe FilePath
[_calibrateCalCurveSegmentFile] :: CalibrateOptions -> Maybe FilePath
[_calibrateCalCurveMatrixFile] :: CalibrateOptions -> Maybe FilePath
runCalibrate :: CalibrateOptions -> IO ()
replaceEmptyNames :: [UncalC14] -> [UncalC14]

module Currycarbon.Utils
data CurrycarbonException
CurrycarbonCLIParsingException :: String -> CurrycarbonException
instance GHC.Show.Show Currycarbon.Utils.CurrycarbonException
instance GHC.Exception.Type.Exception Currycarbon.Utils.CurrycarbonException
