-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A package for simple, fast radiocarbon calibration
--   
--   Radiocarbon calibration with the intercept method optimised for fast
--   calibration of many dates.
@package currycarbon
@version 0.9.0

module Currycarbon.CalCurves.Intcal20

-- | The complete intcal20 calibration curve in a large string (Reimer et
--   al. 2020, doi:10.1017/RDC.2020.41)
intcal20 :: String

module Currycarbon.Types

-- | A data type to represent an uncalibrated radiocarbon date
data UncalC14
UncalC14 :: String -> Int -> Int -> UncalC14

-- | Identifier, e.g. a lab number
[_uncalC14id] :: UncalC14 -> String

-- | Uncalibrated age BP in years
[_uncalC14age] :: UncalC14 -> Int

-- | One-sigma standard deviation of the uncalibrated age in years
[_uncalC14sd] :: UncalC14 -> Int

-- | A data type to represent a year-wise probability density for
--   uncalibrated dates Although technically not correct, we still call
--   this a probability density function
data UncalPDF
UncalPDF :: String -> [(Int, Float)] -> UncalPDF

-- | Identifier, e.g. a lab number
[_uncalPDFid] :: UncalPDF -> String

-- | List that stores years BP and the respective probability densities
--   alongside each other
[_uncalPDFagedens] :: UncalPDF -> [(Int, Float)]

-- | Getter function to access the year BP variable in an uncalibrated age
--   probability density list
getBPsUncal :: UncalPDF -> [Int]

-- | Getter function to access the density variable in an uncalibrated age
--   probability density list
getProbsUncal :: UncalPDF -> [Float]

-- | A data type to represent a calibration curve
newtype CalCurve

-- | List that stores the sequence of year BP, year calBP and the one-sigma
--   standard deviation (on the year BP scale) that makes up the
--   calibration curve
CalCurve :: [(Int, Int, Int)] -> CalCurve

-- | Getter function to access the year BP variable in a calibration curve
getBPs :: CalCurve -> [Int]

-- | Getter function to access the year calBP variable in a calibration
--   curve
getCals :: CalCurve -> [Int]

-- | Getter function to access the sigma variable in a calibration curve
getCalSigmas :: CalCurve -> [Int]

-- | A data type to represent a calibration curve in a <i>wide</i> matrix
--   form
data CalCurveMatrix
CalCurveMatrix :: [Int] -> [Int] -> [[Float]] -> CalCurveMatrix

-- | Row names of the calibration curve matrix: Uncalibrated age BP in
--   years
[_calCurveMatrixbp] :: CalCurveMatrix -> [Int]

-- | Column names of the calibration curve matrix: ^ Calibrated age BP in
--   years
[_calCurveMatrixcalbp] :: CalCurveMatrix -> [Int]

-- | Matrix (as a list of columns) with the probaility densities
[_calCurveMatrixmatrix] :: CalCurveMatrix -> [[Float]]

-- | A data type to represent a year-wise probability density for
--   calibrated ages
data CalPDF
CalPDF :: String -> [(Int, Float)] -> CalPDF

-- | Identifier, e.g. a lab number
[_calPDFid] :: CalPDF -> String

-- | List that stores years calBP and the respective probability densities
--   alongside each other
[_calPDFagedens] :: CalPDF -> [(Int, Float)]

-- | Getter function to access the year BP variable in a calibrated age
--   probability density list
getBPsCal :: CalPDF -> [Int]

-- | Getter function to access the density variable in a calibrated age
--   probability density list
getProbsCal :: CalPDF -> [Float]

-- | A data type to represent a human readable summary of a calibrated
--   radiocarbon date
data CalC14
CalC14 :: String -> [HDR] -> [HDR] -> CalC14

-- | Identifier, e.g. a lab number
[_calC14id] :: CalC14 -> String

-- | One-sigma high density regions
[_calC14hdronesigma] :: CalC14 -> [HDR]

-- | Two-sigma high density regions
[_calC14hdrtwosigma] :: CalC14 -> [HDR]

-- | A data type to represent a high density region of a probability
--   distribution. A high density region is here defined as an age range,
--   within which the respective cummulative probability (e.g. of an
--   calibrated radiocarbon date density curve) is above a certain
--   threshold
data HDR
HDR :: Int -> Int -> HDR

-- | Start of the high density region
[_hdrstart] :: HDR -> Int

-- | End of the high density region
[_hdrstop] :: HDR -> Int
instance GHC.Show.Show Currycarbon.Types.UncalC14
instance GHC.Show.Show Currycarbon.Types.UncalPDF
instance GHC.Show.Show Currycarbon.Types.CalCurve
instance GHC.Show.Show Currycarbon.Types.CalCurveMatrix
instance GHC.Show.Show Currycarbon.Types.CalPDF
instance GHC.Show.Show Currycarbon.Types.HDR
instance GHC.Show.Show Currycarbon.Types.CalC14

module Currycarbon.Parsers
writeCalC14s :: FilePath -> [CalC14] -> IO ()
renderCalC14ForFile :: CalC14 -> String
renderCalC14s :: [CalC14] -> String
renderCalC14 :: CalC14 -> String
renderHDRsForFile :: [HDR] -> [(String, String)]
renderHDRForFile :: HDR -> (String, String)
renderHDRs :: [HDR] -> String
renderHDR :: HDR -> String
writeCalCurveMatrixFile :: FilePath -> CalCurveMatrix -> IO ()
renderCalCurveMatrixFile :: CalCurveMatrix -> String
writeCalPDFs :: FilePath -> [CalPDF] -> IO ()
renderCalPDF :: CalPDF -> String
readUncalC14FromFile :: FilePath -> IO [UncalC14]
readUncalC14String :: String -> Either String [UncalC14]
parseOneUncalC14 :: Parser UncalC14
writeCalCurveFile :: FilePath -> CalCurve -> IO ()
renderCalCurve :: CalCurve -> String
readCalCurve :: FilePath -> IO CalCurve
loadCalCurve :: String -> CalCurve
calCurveFileParser :: Parser [(Int, Int, Int)]
calCurveLineParser :: Parser (Int, Int, Int)
comments :: Parser String

module Currycarbon.Calibration

-- | Take a raw calibration curve and an uncalibrated date and return a
--   tuple with the relevant segment of the calibration curve in standard-
--   and matrix-format
prepareCalCurve :: CalCurve -> UncalPDF -> (CalCurve, CalCurveMatrix)

-- | Transform an uncalibrated date to an uncalibrated probability density
--   table
uncalToPDF :: UncalC14 -> UncalPDF

-- | Calibrates a list of dates with the provided calibration curve
calibrateMany :: CalCurve -> [UncalC14] -> [CalPDF]

-- | Transforms the raw, calibrated probability density table to a
--   meaningful representation of a calibrated radiocarbon date
refineCal :: [CalPDF] -> [CalC14]

module Currycarbon.CLI.RunCalibrate

-- | A data type to represent the options to the CLI module function
--   runCalibrate
data CalibrateOptions
CalibrateOptions :: [UncalC14] -> [FilePath] -> Maybe FilePath -> Bool -> Maybe FilePath -> Maybe FilePath -> Maybe FilePath -> Maybe FilePath -> CalibrateOptions

-- | Uncalibrated dates that should be calibrated
[_calibrateUncalC14] :: CalibrateOptions -> [UncalC14]

-- | List of files with uncalibrated dates to be calibrated
[_calibrateUncalC14File] :: CalibrateOptions -> [FilePath]

-- | Path to a .14c file
[_calibrateCalCurveFile] :: CalibrateOptions -> Maybe FilePath

-- | Suppress the printing of calibration results to the command line
[_calibrateQuiet] :: CalibrateOptions -> Bool

-- | Path to an output file (see CLI documentation)
[_calibrateDensityFile] :: CalibrateOptions -> Maybe FilePath

-- | Path to an output file
[_calibrateHDRFile] :: CalibrateOptions -> Maybe FilePath

-- | Path to an output file
[_calibrateCalCurveSegmentFile] :: CalibrateOptions -> Maybe FilePath

-- | Path to an output file
[_calibrateCalCurveMatrixFile] :: CalibrateOptions -> Maybe FilePath

-- | Interface function to trigger calibration from the command line
runCalibrate :: CalibrateOptions -> IO ()

module Currycarbon.Utils

-- | Different exceptions for currycarbon
data CurrycarbonException
CurrycarbonCLIParsingException :: String -> CurrycarbonException
instance GHC.Show.Show Currycarbon.Utils.CurrycarbonException
instance GHC.Exception.Type.Exception Currycarbon.Utils.CurrycarbonException
